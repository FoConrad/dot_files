###############################################################################
############################# Conrads tmux config #############################
###############################################################################


######################## General options and bindings #########################

set -g default-terminal "screen-256color"
set-window-option -g mode-keys vi
set-option -g default-command "reattach-to-user-namespace -l zsh"

# Reload config without closing tmux
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
# Easy way to reset pane (e.g. for new zsh sess)
bind c-x respawn-pane -k

###################################### # ######################################


######################## Pane navagation and commands #########################
# Vim style pane selection
bind h select-pane -L
bind j select-pane -D 
bind k select-pane -U
bind l select-pane -R

# Pane resizing small step
bind c-h resize-pane -L 1
bind c-j resize-pane -D 1
bind c-k resize-pane -U 1
bind c-l resize-pane -R 1

# Pane resizing large step
bind H resize-pane -L 8
bind J resize-pane -D 8
bind K resize-pane -U 8
bind L resize-pane -R 8

# Start new window, and panes in same directory as where they were created
unbind c
bind c new-window -c '#{pane_current_path}'
unbind %
bind % split-window -h -c '#{pane_current_path}'
unbind '"'
bind '"' split-window -v -c '#{pane_current_path}'
###################################### # ######################################


######################### Window config and commands ##########################
# Window navigation
bind b last-window

# <prefix>Space is bound to next-layout which cycles through different layouts
# for current windows panes. But the layout I prefer is complicated and not
# part of the cycle making it a pain to re-setup if I accidentally hit this
unbind Space
bind Space display "Blocked call to next-layout, you're welcome!"

# This is now done by <C-b>v and works much better
#unbind +
#bind + \
  #new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \;\
  #swap-pane -s tmux-zoom.0 \;\
  #select-window -t tmux-zoom
    
#unbind -
#bind - \
  #last-window \;\
  #swap-pane -s tmux-zoom.0 \;\
  #kill-window -t tmux-zoom
###################################### # ######################################


############################## System copy paste ##############################
bind P paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
# TODO: select into middle-click buffer as well
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle

#bind-key -t vi-copy 'v' begin-selection
#bind-key -t vi-copy 'y' copy-pipe 'xclip -in -selection clipboard'
#bind-key -t vi-copy 'Y' copy-pipe 'xclip -in'
#bind-key -t vi-copy 'r' rectangle-toggle

# Custom command
bind-key Y send-keys 'kjk0y$jA kjp'

###################################### # ######################################


############################# Mouse mode bindngs ##############################
# NOTE: Mouse mode not used enough for these bindings
# Toggle mouse on with <c-b>m for on and <c-b>M for off

#bind m \
  #set -g mouse on \;\

#bind M \
  #set -g mouse off \;\
###################################### # ######################################





###############################################################################
############################# Tmux Plugin Manager #############################
###############################################################################

# NOTE: Should remain at bottom (says the GitHub page)
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

########################### Tmux session restoring ############################
set -g @plugin 'tmux-plugins/tmux-resurrect' # save / restore session
set -g @resurrect-strategy-vim 'session'
set -g @resurrect-processes 'python ipython'
###################################### # ######################################

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
###################################### # ######################################


############################### Dev sess macros ###############################
# Useful macro for running some bash commands in a specifc pane (defined in
# files referenced) by single binding, without leaving current pane
#bind c-g send-keys -t.4 'bash /Users/conrad/tmux.macro' Enter
#bind c-f send-keys -t.1  'bash /Users/conrad/tmux.macro2' Enter

# A hackish way to syncronize some panes, when using syncronize-panes, which
# issues commands to ALL panes, does not apply
# NOTE: Unfortunately this requires issueing command in a tmux prompt, so shell
# tab completion and other features may not be available
bind c-f command-prompt -p "Command :" "send-keys -t.2 '%1' C-m \; send-keys -t.3 '%1' C-m \;"
bind c-g send-keys -t.2 C-p C-m \; send-keys -t.3 C-p C-m \;
# TODO: Find way to send-keys of yank'c command, or previously saved command
# ramaining in register
#bind c-f send-keys -t.1 "%1" C-m \; send-keys -t.3 "%1" C-m \;

###################################### # ######################################
